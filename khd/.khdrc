# sample config for khd

# NOTE(koekeishiya): A bind is written in the form:
#                   <keysym> [!] [<app list>] [->] : <command>
#                   where
#                       <keysym>   = mode + mod + ... + mod - literal
#
#                       <keysym>   = mode + mod + ... + mod - keycode
#                                    keycode must have 0x prefix
#
#                       <keysym>   = mode + mod + ... + mod - button#
#                                    replace '#' with mouse-button id; id >= 3
#
#                       modifier only binding
#                       <keysym>   = mode + mod + ... + mod
#
#                       literal only binding
#                       <keysym>   = - literal
#
#                       keycode only binding
#                       <keysym>   = - keycode
#
#                       [<app,
#                         app,     = optional list '[app1, ..., appN]' of applications
#                         app>]      that this bind will be activated for. if the
#                                    focused application is not contained in this list,
#                                    the associated command will not be triggered, and
#                                    the keypress will be passed through as normal.
#
#                       [!]        = optional operator '!' negates the behaviour when a
#                                    list of applications is given. this marks the bind
#                                    as 'Hotkey_Exclude', causing the bind to not work
#                                    when the focused application is in the given list.
#
#                       [->]       = optional operator '->' that marks this bind as
#                                    'passthrough'. this causes the key to be passed
#                                    through to the system, instead of being consumed.
#
#                       <command>  = command is executed through '$SHELL -c' and
#                                    follows valid shell syntax. if the $SHELL environment
#                                    variable is not set, it will default to '/bin/bash'.
#                                    when bash is used, the ';' delimeter can be specified
#                                    to chain commands.
#
#                                    to allow a command to extend into multiple lines,
#                                    prepend '\' at the end of the previous line.
#
#                                    an EOL character signifies the end of the bind.

# NOTE(koekeishiya) Example of passthrough
# cmd - m -> : echo "alert and minimize window" | alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ]
#         : echo "so this is how deep the rabbit hole goes.." |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of negated app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ] !
#         : echo "blue pill, i choose you!" |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Modifier only binding
# left shift    -> (    right shift   -> )
# left cmd      -> {    right cmd     -> }

# khd mod_trigger_timeout 0.1
# lshift : khd -p "shift - 8"
# rshift : khd -p "shift - 9"
# lcmd   : khd -p "shift + alt - 8"
# rcmd   : khd -p "shift + alt - 9"

# NOTE(koekeishiya) Bind mouse-buttons
# - button3 : khd -w "mouse-button 3 pressed"
# - button4 : khd -w "mouse-button 4 pressed"

# TODO(koekeishiya): possibly allow combined syntax such as
# [switcher,ytd] + ctrl - f : khd -e "mode activate default"

# vi-mode for non-terminal applications

# remap left-control h/j/k/l -> arrow keys
# lctrl - h         ![Kitty,HyperTerm,Terminal,iTerm2]      :   khd -p "- left"
# lctrl - j         ![Kitty,HyperTerm,Terminal,iTerm2]      :   khd -p "- down"
# lctrl - k         ![Kitty,HyperTerm,Terminal,iTerm2]      :   khd -p "- up"
# lctrl - l         ![Kitty,HyperTerm,Terminal,iTerm2]      :   khd -p "- right"

# shift + lctrl - h ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - left"
# shift + lctrl - j ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - down"
# shift + lctrl - k ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - up"
# shift + lctrl - l ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - right"

# # remap left-control 0 / 4   -> start / end of line
# lctrl - 0         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - left"
# lctrl - 4         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - right"

# # remap left-control g / G   -> start / end of text
# lctrl - g         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - up"
# lctrl + shift - g ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - down"

# shift + lctrl - 0 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - left"
# shift + lctrl - 4 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - right"

# # remap left-control b / e   -> start / end of word
# lctrl - b         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - left"
# lctrl - e         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - right"

# shift + lctrl - b ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - left"
# shift + lctrl - e ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - right"

# # remap left-control x       -> forward delete
# lctrl - x         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- delete"



# suppress unregistered keybinds outside default mode
# enabled by default! must be explicitly set to 'off'
# khd void_unlisted_bind off


khd mode switcher prefix on
khd mode switcher timeout 0.3

# Ubersicht update
khd mode switcher on_enter osascript -e 'tell application "Übersicht" to refresh widget id "jikandesu-widget-khd-mode-coffee"'
khd mode default on_enter osascript -e 'tell application "Übersicht" to refresh widget id "jikandesu-widget-khd-mode-coffee"'
khd mode swap on_enter osascript -e 'tell application "Übersicht" to refresh widget id "jikandesu-widget-khd-mode-coffee"'
khd mode window on_enter osascript -e 'tell application "Übersicht" to refresh widget id "jikandesu-widget-khd-mode-coffee"'
khd mode space on_enter osascript -e 'tell application "Übersicht" to refresh widget id "jikandesu-widget-khd-mode-coffee"'


# toggle between modes
ctrl - f                :   khd -e "mode activate switcher"
switcher + ctrl - f     :   khd -e "mode activate default"
swap + ctrl - f         :   khd -e "mode activate default"
swap - escape           :   khd -e "mode activate default"
space + ctrl -f         :   khd -e "mode activate default"
space - escape          :   khd -e "mode activate default"
window + ctrl - f         :   khd -e "mode activate default"
window - escape           :   khd -e "mode activate default"

switcher - w            :   khd -e "mode activate swap"
switcher - a            :   khd -e "mode activate space"
switcher - o            :   khd -e "mode activate window"
# switcher - q            :   khd -e "mode activate info"



# switcher mode
switcher - r            :   khd -e "reload" # reload config

switcher - return       :   open -na /Applications/kitty.app;\
                            khd -e "mode activate default"

switcher - h            :   chunkc tiling::window -f west
switcher - l            :   chunkc tiling::window -f east
switcher - j            :   chunkc tiling::window -f south
switcher - k            :   chunkc tiling::window -f north
switcher - n            :   chunkc tiling::window -f prev
switcher - m            :   chunkc tiling::window -f next

# swap mode
swap - h                :   chunkc tiling::window -s west
swap - j                :   chunkc tiling::window -s south
swap - k                :   chunkc tiling::window -s north
swap - l                :   chunkc tiling::window -s east

# space mode
space - b               :   chunkc tiling::desktop -l bsp
space - m               :   chunkc tiling::desktop -l monocle
space - f               :   chunkc tiling::desktop -l float

space - r               :   chunkc tiling::desktop --rotate 90
space - e               :   chunkc tiling::desktop -e

window - h               :   chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
window - j               :   chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
window - l               :   chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east
window - k               :   chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north

window + cmd - h       :   chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
window + cmd - j       :   chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
window + cmd - l       :   chunwc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east
window + cmd - k       :   chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north 

window - t                  :   chunkc tiling::window -t float;\
                                chunkc tiling::window --grid-layout 4:4:1:1:2:2

